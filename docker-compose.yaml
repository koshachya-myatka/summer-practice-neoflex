services:
  producer-service:
    build:
      context: ./producer-service
      dockerfile: Dockerfile
    image: producer-service
    container_name: producer-service
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: ${SPRING_KAFKA_BOOTSTRAP_SERVERS}
      KAFKA_MESSAGE_TOPIC: ${KAFKA_MESSAGE_TOPIC}
      COMSUMER_SERVICE_PORT: ${COMSUMER_SERVICE_PORT}
    ports:
      - 8080:8080    
    depends_on:
      - kafka
      - consumer-service
    networks:
      - network

  consumer-service:
    build:
      context: ./consumer-service
      dockerfile: Dockerfile
    image: consumer-service
    container_name: consumer-service
    environment:      
      SPRING_KAFKA_BOOTSTRAP_SERVERS: ${SPRING_KAFKA_BOOTSTRAP_SERVERS}
      KAFKA_MESSAGE_TOPIC: ${KAFKA_MESSAGE_TOPIC}
      KAFKA_MESSAGE_GROUP: ${KAFKA_MESSAGE_GROUP}
      COMSUMER_SERVICE_PORT: ${COMSUMER_SERVICE_PORT}
    expose:
      - ${COMSUMER_SERVICE_PORT}
    depends_on:
      - kafka
    networks:
      - network

  kafka:
    image: confluentinc/cp-kafka:7.4.4
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    expose:
      - 9092
    healthcheck:
      test: kafka-topics.sh --list --bootstrap-server ${SPRING_KAFKA_BOOTSTRAP_SERVERS} || exit 1
      interval: 1s
      timeout: 10s
      retries: 10
    depends_on:
      - zookeeper
    networks:
      - network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    expose:
      - 2181
    networks:
      - network

networks:
  network:
    driver: bridge